{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/marketplace/AddTask.js","components/marketplace/ViewTask.js","components/utils/Loader.js","utils/marketplace.js","components/marketplace/Tasks.js","components/utils/Cover.js","assets/img/sandwich.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","a","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Index","save","show","handleClose","handleShow","useState","taskDescription","setTaskDescription","taskName","setTaskName","Button","style","width","class","Modal","onHide","centered","backdrop","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","rows","cols","Footer","disabled","closeModal","toggleModal","showModal","update","taskId","taskDetails","isEmpty","keys","length","toggle","Date","dateCreated","toDateString","backgroundColor","status","color","textTransform","Loader","role","updateTaskById","deleteTaskById","loading","setLoading","taskLists","setTaskLists","setTaskDetails","taskDetailsModal","setTaskDetailsModal","disable","setDisable","setShow","getTaskLists","useCallback","getTasks","console","log","error","addTask","data","task","uuid4","createTask","then","resp","toast","success","deleteTask","updateTask","getTaskDetails","getTaskById","toggleTaskDetailsModal","useEffect","ViewTask","AddTask","Table","bordered","hover","map","item","index","Cover","name","coverImg","minHeight","defaultProps","App","balance","setBalance","getBalance","Container","fluid","Nav","Tasks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","render","StrictMode","document","getElementById","catch"],"mappings":"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","file":"static/js/main.362412f9.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"taskt.chigozie0706.testnet\"; // put here a smart contracts' name\r\n\r\nfunction environment(env) {\r\n  switch (env) {\r\n    case \"mainnet\":\r\n      return {\r\n        networkId: \"mainnet\",\r\n        nodeUrl: \"https://rpc.mainnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.near.org\",\r\n        helperUrl: \"https://helper.mainnet.near.org\",\r\n        explorerUrl: \"https://explorer.mainnet.near.org\",\r\n      };\r\n    case \"testnet\":\r\n      return {\r\n        networkId: \"testnet\",\r\n        nodeUrl: \"https://rpc.testnet.near.org\",\r\n        contractName: CONTRACT_NAME,\r\n        walletUrl: \"https://wallet.testnet.near.org\",\r\n        helperUrl: \"https://helper.testnet.near.org\",\r\n        explorerUrl: \"https://explorer.testnet.near.org\",\r\n      };\r\n    default:\r\n      throw Error(`Unknown environment '${env}'.`);\r\n  }\r\n}\r\n\r\nexport default environment;\r\n","import environment from \"./config\";\r\nimport { connect, Contract, keyStores, WalletConnection } from \"near-api-js\";\r\nimport { formatNearAmount } from \"near-api-js/lib/utils/format\";\r\n\r\nconst nearEnv = environment(\"testnet\");\r\n\r\nexport async function initializeContract() {\r\n  const near = await connect(\r\n    Object.assign(\r\n      { deps: { keyStore: new keyStores.BrowserLocalStorageKeyStore() } },\r\n      nearEnv\r\n    )\r\n  );\r\n  window.walletConnection = new WalletConnection(near);\r\n  window.accountId = window.walletConnection.getAccountId();\r\n  window.contract = new Contract(\r\n    window.walletConnection.account(),\r\n    nearEnv.contractName,\r\n    {\r\n      // List here all view methods\r\n      viewMethods: [\"getTasks\", \"getTaskById\"],\r\n      // List call methods that change state\r\n      changeMethods: [\"createTask\", \"updateTaskById\", \"deleteTaskById\"],\r\n    }\r\n  );\r\n}\r\n\r\nexport async function accountBalance() {\r\n  return formatNearAmount(\r\n    (await window.walletConnection.account().getAccountBalance()).total,\r\n    2\r\n  );\r\n}\r\n\r\nexport async function getAccountId() {\r\n  return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n  window.walletConnection.requestSignIn(nearEnv.contractName);\r\n}\r\n\r\nexport function logout() {\r\n  window.walletConnection.signOut();\r\n  window.location.reload();\r\n}\r\n","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n  if (address) {\r\n    return (\r\n      <>\r\n        <Dropdown>\r\n          <Dropdown.Toggle\r\n            variant=\"light\"\r\n            align=\"end\"\r\n            id=\"dropdown-basic\"\r\n            className=\"d-flex align-items-center border rounded-pill py-1\"\r\n          >\r\n            {amount ? (\r\n              <>\r\n                {amount} <span className=\"ms-1\"> {symbol}</span>\r\n              </>\r\n            ) : (\r\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n            )}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu className=\"shadow-lg border-0\">\r\n            <Dropdown.Item\r\n              href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n              target=\"_blank\"\r\n            >\r\n              <Stack direction=\"horizontal\" gap={2}>\r\n                <i className=\"bi bi-person-circle fs-4\" />\r\n                <span className=\"font-monospace\">{address}</span>\r\n              </Stack>\r\n            </Dropdown.Item>\r\n\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as=\"button\"\r\n              className=\"d-flex align-items-center\"\r\n              onClick={() => {\r\n                destroy();\r\n              }}\r\n            >\r\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n              Disconnect\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Wallet;\r\n","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Notification = () => (\r\n  <ToastContainer\r\n    position=\"top-center\"\r\n    autoClose={5000}\r\n    hideProgressBar\r\n    newestOnTop\r\n    closeOnClick\r\n    rtl={false}\r\n    pauseOnFocusLoss\r\n    draggable={false}\r\n    pauseOnHover\r\n  />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n  <div>\r\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n    <span className=\"text-secondary mx-1\">{text}</span>\r\n  </div>\r\n);\r\n\r\nconst Props = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Modal, Form, FloatingLabel } from \"react-bootstrap\";\r\n\r\n\r\nconst Index = ({ save, show, handleClose, handleShow }) => {\r\n  const [taskDescription, setTaskDescription] = useState(\"\");\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const isFormFilled = () => taskName && taskDescription;\r\n\r\n  \r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleShow}\r\n        variant=\"dark\"\r\n        className=\"rounded-pill px-0\"\r\n        style={{ width: \"38px\" }}\r\n      >\r\n        <i class=\"bi bi-plus\"></i>\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose} centered  backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>New Task</Modal.Title>\r\n        </Modal.Header>\r\n        <Form>\r\n          <Modal.Body>\r\n            <FloatingLabel\r\n              controlId=\"inputName\"\r\n              label=\"Task Name\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  setTaskName(e.target.value);\r\n                }}\r\n                placeholder=\"Enter task name\"\r\n              />\r\n            </FloatingLabel>\r\n\r\n            <FloatingLabel\r\n              controlId=\"inputUrl\"\r\n              label=\"Task Description\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Control\r\n                type=\"textarea\"\r\n                rows={5}\r\n                cols={5}\r\n                placeholder=\"Task Description\"\r\n                onChange={(e) => {\r\n                  setTaskDescription(e.target.value);\r\n                }}\r\n              />\r\n            </FloatingLabel>\r\n            \r\n            \r\n          </Modal.Body>\r\n        </Form>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"dark\"\r\n            disabled={!isFormFilled()}\r\n            onClick={() => {\r\n              save({\r\n                taskName,\r\n                taskDescription\r\n              });\r\n    \r\n            }}\r\n          >\r\n            Create Task\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nIndex.propTypes = {\r\n  save: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Modal\r\n} from 'react-bootstrap';\r\n\r\n\r\nconst Index = ({closeModal, toggleModal, showModal, update, \r\n  taskId, taskDetails = {} }) => {\r\n  \r\nconst isEmpty = Object.keys(taskDetails).length === 0;\r\n  \r\n  return (\r\n    <>\r\n       \r\n<Modal \r\nshow={showModal} onHide={toggleModal}\r\n        backdrop=\"static\"\r\n        >\r\n        <Modal.Header toggle={() => closeModal(false)}>Task Details</Modal.Header>\r\n        <Modal.Body>\r\n  {!isEmpty ? \r\n    <>\r\n    <p><b>Task ID:</b> {taskDetails.id}</p>\r\n    <p><b>Task Name:</b> {taskDetails.taskName}</p>\r\n    <p><b>Task Description:</b> {taskDetails.taskDescription}</p>\r\n    <p><b>Date Created:</b> {new Date(taskDetails.dateCreated / 1000000).toDateString()}</p>\r\n    <p><b>Status:</b> <span style={{backgroundColor: taskDetails.status === 'pending' ? 'orange' : 'lightGreen', color: 'grey', textTransform : 'capitalize'}}>{taskDetails.status}</span></p>\r\n    </>\r\n  :null \r\n\r\n  }\r\n  </Modal.Body>\r\n  <Modal.Footer>\r\n          <Button onClick={() => closeModal(false)} size=\"sm\">Close</Button>\r\n         </Modal.Footer>\r\n</Modal>\r\n\r\n        \r\n          \r\n    </>\r\n  );\r\n};\r\n\r\nIndex.propTypes = {\r\n  \r\n  closeModal: PropTypes.func.isRequired,\r\n  \r\n};\r\n\r\nexport default Index;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n  <div className=\"d-flex justify-content-center mt-2\">\r\n    <Spinner animation=\"border\" role=\"status\">\r\n      <span className=\"visually-hidden\">Loading...</span>\r\n    </Spinner>\r\n  </div>\r\n);\r\nexport default Loader;\r\n","import { v4 as uuid4 } from \"uuid\";\r\n\r\nexport function createTask(task) {\r\n  task.id = uuid4();\r\n  return window.contract.createTask({ task }); // set_product for the Rust contract\r\n}\r\n\r\nexport function getTasks() {\r\n  return window.contract.getTasks(); // get_products for the Rust contract\r\n}\r\n\r\n\r\nexport function updateTaskById(id) {\r\n  return window.contract.updateTaskById({id}); // get_products for the Rust contract\r\n}\r\n\r\nexport function getTaskById(id) {\r\n  return window.contract.getTaskById({id}); // get_products for the Rust contract\r\n}\r\n\r\nexport function deleteTaskById(id) {\r\n  return window.contract.deleteTaskById({id}); // get_products for the Rust contract\r\n}","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddTask from \"./AddTask\";\r\nimport ViewTask from \"./ViewTask\"\r\nimport Loader from \"../utils/Loader\";\r\nimport {Table, Button } from \"react-bootstrap\";\r\nimport { AiFillDelete, AiOutlineFolderView } from \"react-icons/ai\";\r\nimport { GoChecklist } from \"react-icons/go\";\r\nimport {\r\n  getTasks, createTask, updateTaskById, deleteTaskById, getTaskById\r\n} from \"../../utils/marketplace\";\r\n\r\nconst Index = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [taskLists, setTaskLists] = useState([])\r\nconst [taskDetails, setTaskDetails] = useState({})\r\nconst [taskDetailsModal, setTaskDetailsModal] = useState(false)\r\nconst [disable, setDisable] =useState(false)\r\nconst [show, setShow] = useState(false);\r\n\r\n  \r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  \r\n  const getTaskLists = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setTaskLists(await getTasks());\r\n    } catch (error) {\r\n      console.log({ error });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  });\r\n\r\n\r\n  const addTask = async (data) => {\r\n  try {\r\n        createTask(data).then((resp) => {\r\n       console.log(resp)\r\n       getTaskLists()\r\n       toast.success(\"Task added successfully\")\r\n       handleClose()\r\n           });\r\n\r\n  } catch (error) {\r\n    console.log({ error });\r\n    toast.error(\"network error\")\r\n      } finally {\r\n    \r\n  }\r\n};\r\n\r\nconst deleteTask = async (id) => {\r\n  try{\r\n    setDisable(true)\r\n    toast.success(\"please wait your request is been processed\")\r\n    deleteTaskById(id)\r\n    .then((resp) => {\r\n      toast.success(\"Task deleted successfully\")\r\n      getTaskLists()\r\n    })\r\n  }\r\n  catch(error) {\r\n   setDisable(false)\r\n    toast.error(\"network error\")\r\n  }\r\n  finally{\r\n    setDisable(false)\r\n  }\r\n}\r\n\r\n\r\nconst updateTask = async (id) => {\r\n  try{\r\n    setDisable(true)\r\n    updateTaskById(id)\r\n    .then((resp) => {\r\n      console.log(resp)\r\n      toast.success(\"Task done successfully\")\r\n      getTaskLists()\r\n      setDisable(false)\r\n    })\r\n  }\r\n  catch(error) {\r\n    console.log({error})\r\n    toast.error(\"network error\")\r\n    setDisable(false)\r\n  }\r\n}\r\n\r\nconst getTaskDetails = async (taskId) => {\r\n  try{\r\n    getTaskById(taskId)\r\n    .then((resp) => {\r\n      console.log(resp)\r\n      setTaskDetails(resp)\r\n    })\r\n  }\r\n  catch(error) {\r\n    console.log({error})\r\n  }\r\n}\r\n\r\nconst toggleTaskDetailsModal = (id) => {\r\n  getTaskDetails(id);\r\n  setTaskDetailsModal(!taskDetailsModal)\r\n\r\n}\r\n\r\nconst closeModal = (data) => {\r\n  setTaskDetailsModal(!taskDetailsModal)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getTaskLists()\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n\r\n      {!loading ? (\r\n        <>\r\n        <ViewTask  taskDetails={taskDetails} showModal={taskDetailsModal} \r\n        toggleModal={toggleTaskDetailsModal} closeModal={closeModal} />\r\n\r\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h1 className=\"fs-4 fw-bold mb-0\">Task Lists</h1>\r\n            <AddTask \r\n            show ={show}\r\n             save={addTask} \r\n             handleClose = {handleClose}\r\n             handleShow = {handleShow}\r\n             \r\n            />\r\n          </div>\r\n           <Table  bordered hover variant=\"dark\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n              <th>Task Name</th>\r\n              <th>Date Created</th>\r\n              <th>Status</th>\r\n               <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {taskLists.map((item, index) => (\r\n        <tr key={index}>\r\n          <td>{index + 1}</td>\r\n          <td>{item.taskName}</td>\r\n          <td>{new Date(item.dateCreated / 1000000).toDateString()}</td>\r\n          <td style={{backgroundColor: item.status === 'pending' ? 'orange' : 'green', textTransform : 'capitalize'}}>{item.status}</td>\r\n          <td className=\"d-flex justify-content-between\">\r\n                  <Button size=\"sm\" disabled={disable} variant=\"success\" onClick={() => updateTask(item.id)}>\r\n                    <GoChecklist />\r\n                  </Button>\r\n                  <Button size=\"sm\"  disabled={disable} \r\n                  onClick={() => toggleTaskDetailsModal(item.id)}\r\n                  ><AiOutlineFolderView  variant=\"white\"/></Button>\r\n                  <Button size=\"sm\" disabled={disable}\r\n                  variant=\"danger\" onClick={() => deleteTask(item.id)}><AiFillDelete /> </Button>\r\n                  </td>\r\n        </tr>\r\n        ))\r\n    }\r\n      </tbody>\r\n    </Table>\r\n\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ name, login, coverImg }) => {\r\n  if ((name, login, coverImg)) {\r\n    return (\r\n      <div\r\n        className=\"d-flex justify-content-center flex-column text-center \"\r\n        style={{  minHeight: \"100vh\" }}\r\n      > <div className=\"mt-auto\">\r\n       <h4 className=\"mt-auto text-secondary\">Welcome to DecTask-Scheduler</h4>\r\n      <p className=\"mt-auto text-secondary\">In DecTask-Scheduler you create your todo list on the blockchain</p>\r\n          <p className=\"mt-auto text-secondary\">Please connect your wallet to continue.</p>\r\n          <Button\r\n            onClick={login}\r\n            // variant=\"outline-light\"\r\n            className=\"rounded-pill px-3 mt-3\"\r\n          >\r\n            Connect Wallet\r\n          </Button>\r\n        </div>\r\n        <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nCover.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nCover.defaultProps = {\r\n  name: \"\",\r\n};\r\n\r\nexport default Cover;\r\n","export default __webpack_public_path__ + \"static/media/sandwich.2d312449.jpg\";","import React, { useEffect, useCallback, useState } from \"react\";\r\nimport { Container, Nav } from \"react-bootstrap\";\r\nimport { login, logout as destroy, accountBalance } from \"./utils/near\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport { Notification } from \"./components/utils/Notifications\";\r\nimport Tasks from \"./components/marketplace/Tasks\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport coverImg from \"./assets/img/sandwich.jpg\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = function AppWrapper() {\r\n  const account = window.walletConnection.account();\r\n\r\n  const [balance, setBalance] = useState(\"0\");\r\n\r\n  const getBalance = useCallback(async () => {\r\n    if (account.accountId) {\r\n      setBalance(await accountBalance());\r\n    }\r\n  });\r\n\r\n// <Cover name=\"N-Tasker\" login={login}  />\r\n      \r\n  useEffect(() => {\r\n    getBalance();\r\n  }, [getBalance]);\r\n\r\n  return (\r\n    <>\r\n      <Notification />\r\n      {account.accountId ? (\r\n        <Container fluid=\"md\">\r\n          <Nav className=\"justify-content-end pt-3 pb-5\">\r\n            <Nav.Item>\r\n              <Wallet\r\n                address={account.accountId}\r\n                amount={balance}\r\n                symbol=\"NEAR\"\r\n                destroy={destroy}\r\n              />\r\n            </Nav.Item>\r\n          </Nav>\r\n          <main>\r\n            <Tasks />\r\n          </main>\r\n        </Container>\r\n      ) : (\r\n        \r\n      <Cover name=\"N-Tasker\" login={login} coverImg={coverImg} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeContract } from \"./utils/near\";\r\n\r\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nwindow.nearInitPromise = initializeContract()\r\n  .then(() => {\r\n    ReactDOM.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  })\r\n  .catch(console.error);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}